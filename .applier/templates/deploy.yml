apiVersion: v1
kind: Template
metadata:
  name: "${NAME}"
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: "${NAME}"
          deploymentconfig: "${NAME}"
      spec:
        containers:
        - image: "${IMAGE_NAME}:${IMAGE_TAG}"
          imagePullPolicy: Always
          name: "${NAME}"
          env:
          - name: GITLAB_PERSONAL_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: omp-gitlab-configuration
                key: GITLAB_PERSONAL_ACCESS_TOKEN
          - name: TEMPLATE_REPOSITORY_ID
            valueFrom:
              secretKeyRef:
                name: omp-gitlab-configuration
                key: TEMPLATE_REPOSITORY_ID
          - name: RESIDENCIES_PARENT_REPOSITORIES_ID
            valueFrom:
              secretKeyRef:
                name: omp-gitlab-configuration
                key: RESIDENCIES_PARENT_REPOSITORIES_ID
          - name: GITLAB_API_URL
            valueFrom:
              secretKeyRef:
                name: omp-gitlab-configuration
                key: GITLAB_API_URL
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - name: config-volume
            mountPath: /deployments/config
        volumes:
        - name: config-volume
          configMap:
            name: ${NAME}-config
            items:
            - key: application.properties
              path: application.properties
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers: []
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    sessionAffinity: None
    type: ClusterIP
parameters:
- name: NAME
  description: The name of the app to deploy
  required: true
- name: IMAGE_NAME
  description: The image to deploy
  required: true
- name: IMAGE_TAG
  description: The tag of the image to deploy
  required: true
